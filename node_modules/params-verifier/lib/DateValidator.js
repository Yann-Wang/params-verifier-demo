'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isNan = require('babel-runtime/core-js/number/is-nan');

var _isNan2 = _interopRequireDefault(_isNan);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Err = require('./Err');

var _ValidatorBase2 = require('./ValidatorBase');

var _ValidatorBase3 = _interopRequireDefault(_ValidatorBase2);

var _dataType = require('./dataType');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateValidator = function (_ValidatorBase) {
    (0, _inherits3.default)(DateValidator, _ValidatorBase);

    function DateValidator(data, options) {
        (0, _classCallCheck3.default)(this, DateValidator);

        var _this = (0, _possibleConstructorReturn3.default)(this, (DateValidator.__proto__ || (0, _getPrototypeOf2.default)(DateValidator)).call(this));

        _this.type = 'date';
        _this.value = data;
        _this.options = options || {};
        return _this;
    }

    (0, _createClass3.default)(DateValidator, [{
        key: 'singleField',
        value: function singleField(name, options) {
            this.currentFieldInfo = this.fetchFieldInfo(name, this.value, this.type, options);
            this.validate();
        }
    }, {
        key: 'checkOptionsParamsSupport',
        value: function checkOptionsParamsSupport() {
            this.checkOptionsValidator();
            this.checkOptionsRequired();
        }
    }, {
        key: 'startValidateProcedure',
        value: function startValidateProcedure() {
            this.tryCastType();
            this.verifyType();
            this.runValidator();
        }
    }, {
        key: 'tryCastType',
        value: function tryCastType() {
            var value = this.currentFieldInfo.value;

            var date = new Date(value);

            if (typeof value === 'string' && !(0, _isNan2.default)(date.getTime())) {
                this.currentFieldInfo.value = date;
            }
        }
    }, {
        key: 'verifyType',
        value: function verifyType() {
            var _currentFieldInfo = this.currentFieldInfo,
                value = _currentFieldInfo.value,
                name = _currentFieldInfo.name;


            if (!(0, _dataType.isDat)(value)) {
                throw new _Err.ParamsError('the type of ' + name + ' is not date.');
            }
        }
    }]);
    return DateValidator;
}(_ValidatorBase3.default);

exports.default = DateValidator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EYXRlVmFsaWRhdG9yLmpzIl0sIm5hbWVzIjpbIkRhdGVWYWxpZGF0b3IiLCJkYXRhIiwib3B0aW9ucyIsInR5cGUiLCJ2YWx1ZSIsIm5hbWUiLCJjdXJyZW50RmllbGRJbmZvIiwiZmV0Y2hGaWVsZEluZm8iLCJ2YWxpZGF0ZSIsImNoZWNrT3B0aW9uc1ZhbGlkYXRvciIsImNoZWNrT3B0aW9uc1JlcXVpcmVkIiwidHJ5Q2FzdFR5cGUiLCJ2ZXJpZnlUeXBlIiwicnVuVmFsaWRhdG9yIiwiZGF0ZSIsIkRhdGUiLCJnZXRUaW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7O0lBRXFCQSxhOzs7QUFDakIsMkJBQVlDLElBQVosRUFBa0JDLE9BQWxCLEVBQTJCO0FBQUE7O0FBQUE7O0FBRXZCLGNBQUtDLElBQUwsR0FBWSxNQUFaO0FBQ0EsY0FBS0MsS0FBTCxHQUFhSCxJQUFiO0FBQ0EsY0FBS0MsT0FBTCxHQUFlQSxXQUFXLEVBQTFCO0FBSnVCO0FBSzFCOzs7O29DQUVXRyxJLEVBQU1ILE8sRUFBUztBQUN2QixpQkFBS0ksZ0JBQUwsR0FBd0IsS0FBS0MsY0FBTCxDQUFvQkYsSUFBcEIsRUFBMEIsS0FBS0QsS0FBL0IsRUFBc0MsS0FBS0QsSUFBM0MsRUFBaURELE9BQWpELENBQXhCO0FBQ0EsaUJBQUtNLFFBQUw7QUFDSDs7O29EQUUyQjtBQUN4QixpQkFBS0MscUJBQUw7QUFDQSxpQkFBS0Msb0JBQUw7QUFDSDs7O2lEQUV3QjtBQUNyQixpQkFBS0MsV0FBTDtBQUNBLGlCQUFLQyxVQUFMO0FBQ0EsaUJBQUtDLFlBQUw7QUFDSDs7O3NDQUVhO0FBQUEsZ0JBQ0ZULEtBREUsR0FDUSxLQUFLRSxnQkFEYixDQUNGRixLQURFOztBQUVWLGdCQUFNVSxPQUFPLElBQUlDLElBQUosQ0FBU1gsS0FBVCxDQUFiOztBQUVBLGdCQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBakIsSUFBNkIsQ0FBQyxxQkFBYVUsS0FBS0UsT0FBTCxFQUFiLENBQWxDLEVBQWdFO0FBQzVELHFCQUFLVixnQkFBTCxDQUFzQkYsS0FBdEIsR0FBOEJVLElBQTlCO0FBQ0g7QUFDSjs7O3FDQUVZO0FBQUEsb0NBQ2UsS0FBS1IsZ0JBRHBCO0FBQUEsZ0JBQ0RGLEtBREMscUJBQ0RBLEtBREM7QUFBQSxnQkFDTUMsSUFETixxQkFDTUEsSUFETjs7O0FBR1QsZ0JBQUksQ0FBQyxxQkFBTUQsS0FBTixDQUFMLEVBQW1CO0FBQ2Ysc0JBQU0sc0NBQStCQyxJQUEvQixtQkFBTjtBQUNIO0FBQ0o7Ozs7O2tCQXZDZ0JMLGEiLCJmaWxlIjoiRGF0ZVZhbGlkYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhcmFtc0Vycm9yIH0gZnJvbSAnLi9FcnInO1xuaW1wb3J0IFZhbGlkYXRvckJhc2UgZnJvbSAnLi9WYWxpZGF0b3JCYXNlJztcbmltcG9ydCB7IGlzRGF0IH0gZnJvbSAnLi9kYXRhVHlwZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVWYWxpZGF0b3IgZXh0ZW5kcyBWYWxpZGF0b3JCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudHlwZSA9ICdkYXRlJztcbiAgICAgICAgdGhpcy52YWx1ZSA9IGRhdGE7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgfVxuXG4gICAgc2luZ2xlRmllbGQobmFtZSwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmN1cnJlbnRGaWVsZEluZm8gPSB0aGlzLmZldGNoRmllbGRJbmZvKG5hbWUsIHRoaXMudmFsdWUsIHRoaXMudHlwZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICB9XG5cbiAgICBjaGVja09wdGlvbnNQYXJhbXNTdXBwb3J0KCkge1xuICAgICAgICB0aGlzLmNoZWNrT3B0aW9uc1ZhbGlkYXRvcigpO1xuICAgICAgICB0aGlzLmNoZWNrT3B0aW9uc1JlcXVpcmVkKCk7XG4gICAgfVxuXG4gICAgc3RhcnRWYWxpZGF0ZVByb2NlZHVyZSgpIHtcbiAgICAgICAgdGhpcy50cnlDYXN0VHlwZSgpO1xuICAgICAgICB0aGlzLnZlcmlmeVR5cGUoKTtcbiAgICAgICAgdGhpcy5ydW5WYWxpZGF0b3IoKTtcbiAgICB9XG5cbiAgICB0cnlDYXN0VHlwZSgpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5jdXJyZW50RmllbGRJbmZvO1xuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodmFsdWUpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICFOdW1iZXIuaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRGaWVsZEluZm8udmFsdWUgPSBkYXRlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmVyaWZ5VHlwZSgpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSwgbmFtZSB9ID0gdGhpcy5jdXJyZW50RmllbGRJbmZvO1xuXG4gICAgICAgIGlmICghaXNEYXQodmFsdWUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUGFyYW1zRXJyb3IoYHRoZSB0eXBlIG9mICR7bmFtZX0gaXMgbm90IGRhdGUuYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=