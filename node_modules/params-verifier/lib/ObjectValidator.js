'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Err = require('./Err');

var _ValidatorBase2 = require('./ValidatorBase');

var _ValidatorBase3 = _interopRequireDefault(_ValidatorBase2);

var _selectValidator = require('./selectValidator');

var _selectValidator2 = _interopRequireDefault(_selectValidator);

var _dataType = require('./dataType');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ObjectValidator = function (_ValidatorBase) {
    (0, _inherits3.default)(ObjectValidator, _ValidatorBase);

    function ObjectValidator(data, options) {
        (0, _classCallCheck3.default)(this, ObjectValidator);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ObjectValidator.__proto__ || (0, _getPrototypeOf2.default)(ObjectValidator)).call(this));

        _this.value = data;
        _this.options = options || {};
        _this.type = 'object';
        _this.fieldsList = {};
        return _this;
    }

    (0, _createClass3.default)(ObjectValidator, [{
        key: 'singleField',
        value: function singleField(name, options) {
            this.currentFieldInfo = this.fetchFieldInfo(name, this.value, this.type, options);
            this.validate();
        }
    }, {
        key: 'field',
        value: function field(name, type, options) {
            var typeValidator = (0, _selectValidator2.default)(type)(this.value[name], options);
            typeValidator.currentFieldInfo = this.fetchFieldInfo(name, typeValidator.value, typeValidator.type, options);
            var isFiltered = typeValidator.validate();
            if (isFiltered) {
                this.fieldsList[name] = isFiltered[name];
            }
            return this;
        }
    }, {
        key: 'checkOptionsParamsSupport',
        value: function checkOptionsParamsSupport() {
            this.checkOptionsValidator();
            this.checkOptionsRequired();
        }
    }, {
        key: 'startValidateProcedure',
        value: function startValidateProcedure() {
            this.verifyType();
            this.runValidator();
        }
    }, {
        key: 'verifyType',
        value: function verifyType() {
            var _currentFieldInfo = this.currentFieldInfo,
                value = _currentFieldInfo.value,
                name = _currentFieldInfo.name;

            if (!(0, _dataType.isObj)(value)) {
                throw new _Err.ParamsError('the type of ' + name + ' is not object.');
            }
        }
    }, {
        key: 'filter',
        value: function filter() {
            return this.fieldsList;
        }
    }]);
    return ObjectValidator;
}(_ValidatorBase3.default);

exports.default = ObjectValidator;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9PYmplY3RWYWxpZGF0b3IuanMiXSwibmFtZXMiOlsiT2JqZWN0VmFsaWRhdG9yIiwiZGF0YSIsIm9wdGlvbnMiLCJ2YWx1ZSIsInR5cGUiLCJmaWVsZHNMaXN0IiwibmFtZSIsImN1cnJlbnRGaWVsZEluZm8iLCJmZXRjaEZpZWxkSW5mbyIsInZhbGlkYXRlIiwidHlwZVZhbGlkYXRvciIsImlzRmlsdGVyZWQiLCJjaGVja09wdGlvbnNWYWxpZGF0b3IiLCJjaGVja09wdGlvbnNSZXF1aXJlZCIsInZlcmlmeVR5cGUiLCJydW5WYWxpZGF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0lBRXFCQSxlOzs7QUFDakIsNkJBQVlDLElBQVosRUFBa0JDLE9BQWxCLEVBQTJCO0FBQUE7O0FBQUE7O0FBR3ZCLGNBQUtDLEtBQUwsR0FBYUYsSUFBYjtBQUNBLGNBQUtDLE9BQUwsR0FBZUEsV0FBVyxFQUExQjtBQUNBLGNBQUtFLElBQUwsR0FBWSxRQUFaO0FBQ0EsY0FBS0MsVUFBTCxHQUFrQixFQUFsQjtBQU51QjtBQU8xQjs7OztvQ0FFV0MsSSxFQUFNSixPLEVBQVM7QUFDdkIsaUJBQUtLLGdCQUFMLEdBQXdCLEtBQUtDLGNBQUwsQ0FBb0JGLElBQXBCLEVBQTBCLEtBQUtILEtBQS9CLEVBQXNDLEtBQUtDLElBQTNDLEVBQWlERixPQUFqRCxDQUF4QjtBQUNBLGlCQUFLTyxRQUFMO0FBQ0g7Ozs4QkFFS0gsSSxFQUFNRixJLEVBQU1GLE8sRUFBUztBQUN2QixnQkFBTVEsZ0JBQWdCLCtCQUFnQk4sSUFBaEIsRUFBc0IsS0FBS0QsS0FBTCxDQUFXRyxJQUFYLENBQXRCLEVBQXdDSixPQUF4QyxDQUF0QjtBQUNBUSwwQkFBY0gsZ0JBQWQsR0FDSSxLQUFLQyxjQUFMLENBQW9CRixJQUFwQixFQUEwQkksY0FBY1AsS0FBeEMsRUFBK0NPLGNBQWNOLElBQTdELEVBQW1FRixPQUFuRSxDQURKO0FBRUEsZ0JBQU1TLGFBQWFELGNBQWNELFFBQWQsRUFBbkI7QUFDQSxnQkFBSUUsVUFBSixFQUFnQjtBQUNaLHFCQUFLTixVQUFMLENBQWdCQyxJQUFoQixJQUF3QkssV0FBV0wsSUFBWCxDQUF4QjtBQUNIO0FBQ0QsbUJBQU8sSUFBUDtBQUNIOzs7b0RBRTJCO0FBQ3hCLGlCQUFLTSxxQkFBTDtBQUNBLGlCQUFLQyxvQkFBTDtBQUNIOzs7aURBRXdCO0FBQ3JCLGlCQUFLQyxVQUFMO0FBQ0EsaUJBQUtDLFlBQUw7QUFDSDs7O3FDQUVZO0FBQUEsb0NBQ2UsS0FBS1IsZ0JBRHBCO0FBQUEsZ0JBQ0RKLEtBREMscUJBQ0RBLEtBREM7QUFBQSxnQkFDTUcsSUFETixxQkFDTUEsSUFETjs7QUFFVCxnQkFBSSxDQUFDLHFCQUFNSCxLQUFOLENBQUwsRUFBbUI7QUFDZixzQkFBTSxzQ0FBK0JHLElBQS9CLHFCQUFOO0FBQ0g7QUFDSjs7O2lDQUVRO0FBQ0wsbUJBQU8sS0FBS0QsVUFBWjtBQUNIOzs7OztrQkE3Q2dCTCxlIiwiZmlsZSI6Ik9iamVjdFZhbGlkYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhcmFtc0Vycm9yIH0gZnJvbSAnLi9FcnInO1xuaW1wb3J0IFZhbGlkYXRvckJhc2UgZnJvbSAnLi9WYWxpZGF0b3JCYXNlJztcbmltcG9ydCBzZWxlY3RWYWxpZGF0b3IgZnJvbSAnLi9zZWxlY3RWYWxpZGF0b3InO1xuaW1wb3J0IHsgaXNPYmogfSBmcm9tICcuL2RhdGFUeXBlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT2JqZWN0VmFsaWRhdG9yIGV4dGVuZHMgVmFsaWRhdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IoZGF0YSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIHRoaXMudmFsdWUgPSBkYXRhO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICB0aGlzLnR5cGUgPSAnb2JqZWN0JztcbiAgICAgICAgdGhpcy5maWVsZHNMaXN0ID0ge307XG4gICAgfVxuXG4gICAgc2luZ2xlRmllbGQobmFtZSwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmN1cnJlbnRGaWVsZEluZm8gPSB0aGlzLmZldGNoRmllbGRJbmZvKG5hbWUsIHRoaXMudmFsdWUsIHRoaXMudHlwZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICB9XG5cbiAgICBmaWVsZChuYW1lLCB0eXBlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHR5cGVWYWxpZGF0b3IgPSBzZWxlY3RWYWxpZGF0b3IodHlwZSkodGhpcy52YWx1ZVtuYW1lXSwgb3B0aW9ucyk7XG4gICAgICAgIHR5cGVWYWxpZGF0b3IuY3VycmVudEZpZWxkSW5mbyA9XG4gICAgICAgICAgICB0aGlzLmZldGNoRmllbGRJbmZvKG5hbWUsIHR5cGVWYWxpZGF0b3IudmFsdWUsIHR5cGVWYWxpZGF0b3IudHlwZSwgb3B0aW9ucyk7XG4gICAgICAgIGNvbnN0IGlzRmlsdGVyZWQgPSB0eXBlVmFsaWRhdG9yLnZhbGlkYXRlKCk7XG4gICAgICAgIGlmIChpc0ZpbHRlcmVkKSB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkc0xpc3RbbmFtZV0gPSBpc0ZpbHRlcmVkW25hbWVdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGNoZWNrT3B0aW9uc1BhcmFtc1N1cHBvcnQoKSB7XG4gICAgICAgIHRoaXMuY2hlY2tPcHRpb25zVmFsaWRhdG9yKCk7XG4gICAgICAgIHRoaXMuY2hlY2tPcHRpb25zUmVxdWlyZWQoKTtcbiAgICB9XG5cbiAgICBzdGFydFZhbGlkYXRlUHJvY2VkdXJlKCkge1xuICAgICAgICB0aGlzLnZlcmlmeVR5cGUoKTtcbiAgICAgICAgdGhpcy5ydW5WYWxpZGF0b3IoKTtcbiAgICB9XG5cbiAgICB2ZXJpZnlUeXBlKCkge1xuICAgICAgICBjb25zdCB7IHZhbHVlLCBuYW1lIH0gPSB0aGlzLmN1cnJlbnRGaWVsZEluZm87XG4gICAgICAgIGlmICghaXNPYmoodmFsdWUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUGFyYW1zRXJyb3IoYHRoZSB0eXBlIG9mICR7bmFtZX0gaXMgbm90IG9iamVjdC5gKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmllbGRzTGlzdDtcbiAgICB9XG59XG4iXX0=